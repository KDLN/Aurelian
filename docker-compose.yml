version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: aurelian_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/database/prisma/migrations:/docker-entrypoint-initdb.d/migrations:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aurelian

  # Web Application (Next.js)
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aurelian_dev
      - NEXT_PUBLIC_WS_URL=ws://localhost:8787
      - DATABASE_POOL_SIZE=20
      - DATABASE_POOL_TIMEOUT=10
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aurelian
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Realtime Server (Colyseus)
  realtime:
    build:
      context: .
      dockerfile: apps/realtime/Dockerfile
      target: runner
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8787
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aurelian_dev
      - DATABASE_POOL_SIZE=15
      - DATABASE_POOL_TIMEOUT=10
    ports:
      - "8787:8787"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aurelian
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8787/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
      target: runner
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aurelian_dev
      - DATABASE_POOL_SIZE=10
      - DATABASE_POOL_TIMEOUT=15
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aurelian
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aurelian
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  aurelian:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16