
name: deploy-realtime-cloudrun
on:
  push:
    branches: [ master ]
    paths:
      - 'apps/realtime/**'
      - 'prisma/**'
      - '.github/workflows/realtime-cloudrun.yml'
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - uses: google-github-actions/setup-gcloud@v2
        with: { version: '>= 471.0.0' }
      - run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
      - name: Generate Prisma Client
        run: |
          npm install
          npx prisma generate
      - name: Build & push
        env:
          REGION: ${{ secrets.GCP_REGION }}
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/aurelian/realtime:${GITHUB_SHA::7}"
          docker build -f apps/realtime/Dockerfile -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      - name: Deploy
        env:
          REGION: ${{ secrets.GCP_REGION }}
          SERVICE: ${{ secrets.REALTIME_SERVICE }}
          IMAGE_URI: ${{ env.IMAGE_URI }}
        run: gcloud run deploy "$SERVICE" --image "$IMAGE_URI" --region "$REGION" --allow-unauthenticated --min-instances=1 --port=8787
